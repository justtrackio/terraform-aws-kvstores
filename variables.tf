variable "kvstores" {
  type = map(object({
    ddb = optional(object({
      autoscaler = optional(object({
        enabled = optional(bool, true)
        read_schedule = optional(list(object({
          schedule     = string
          min_capacity = number
          max_capacity = number
        })), [])
        write_schedule = optional(list(object({
          schedule     = string
          min_capacity = number
          max_capacity = number
        })), [])
      }), {})
      billing_mode = optional(string, "PROVISIONED")
    }), {})
    redis = object({
      cpu_size = optional(number, 25),
      deployment = optional(object({
        image = optional(object({
          repository = optional(string, "redis")
          tag        = optional(string, "7-alpine")
        }), {})
        desired_count           = optional(number, 1)
        maximum_percent         = optional(number, 100)
        minimum_healthy_percent = optional(number, 0)
      }), {})
      enabled                = optional(bool, true),
      memory_size            = optional(string, "25")
      service_discovery_name = optional(string, "")
      service_memory_size    = optional(number, 50)
      service_placement_constraints = optional(set(object({
        type       = string
        expression = string
      })), [])
    })
  }))
  description = "Kvstores to be created"
  default     = {}
}

variable "attributes_as_suffix" {
  type        = bool
  description = "Attributes passed into the module are put in front of each.key (model name) by default. Setting this to true will put the attributes after the each.key."
  default     = false
}

variable "label_orders" {
  type = object({
    ddb   = optional(list(string))
    iam   = optional(list(string))
    redis = optional(list(string))
  })
  description = "label orders as per cloudposse label module"
}

variable "redis_ecs_cluster_arn" {
  type        = string
  description = "Arn of the ecs cluster to spawn redis instances in (only required when kvstore.x.redis.enabled=true)"
  default     = null
}

variable "redis_launch_type" {
  type        = string
  description = "The launch type on which to run your service. Valid values are `EC2` and `FARGATE`"
  default     = "EC2"
}

variable "redis_network_mode" {
  default     = null
  description = "The networking mode used for task, can be null or awsvpc"
  type        = string
}

variable "redis_propagate_tags" {
  type        = string
  description = "Specifies whether to propagate the tags from the task definition or the service to the tasks. The valid values are SERVICE and TASK_DEFINITION"
  default     = "SERVICE"
}

variable "redis_service_discovery_dns_namespace_id" {
  type        = string
  description = "ID of the aws service discovery dns namespace (generated by the terraform-aws-ocean-ecs module, visible in Cloud Map)"
}

variable "redis_vpc_id" {
  type        = string
  default     = null
  description = "ID of the aws vpc in which to spawn the redis service"
}
